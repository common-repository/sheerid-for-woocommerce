<?php

namespace WooCommerce\SheerID\Admin\Settings;

use SheerID\Client\BaseClient;
use WooCommerce\SheerID\Admin\MetaBox\Traits\ProgramTrait;

class CheckoutSettings extends AbstractSettings {

	use ProgramTrait;

	public $id = 'sheerid_checkout';

	private $client;

	public function __construct( BaseClient $client ) {
		$this->client = $client;
		$this->title  = __( 'Checkout Settings', 'sheerid-for-woocommerce' );
		parent::__construct();
	}

	public function admin_options() {
		parent::admin_options(); // TODO: Change the autogenerated stub
	}

	public function init_form_fields() {
		$this->form_fields = [
			'title'   => [
				'title' => __( 'Checkout Settings', 'sheerid-for-woocommerce' ),
				'type'  => 'title'
			],
			'enabled' => [
				'title'       => __( 'Enable', 'sheerid-for-woocommerce' ),
				'type'        => 'checkbox',
				'default'     => 'no',
				'value'       => 'yes',
				'description' => __( 'If enabled the checkout page will be restricted by the selected program.', 'sheerid-for-woocommerce' ),
				'desc_tip'    => true
			],
			'program' => [
				'title'       => __( 'Program', 'sheerid-for-woocommerce' ),
				'type'        => 'select',
				'default'     => '',
				'options'     => $this->get_program_options(),
				'description' => __( 'This is the program that the customer must verify against on the checkout page.', 'sheerid-for-woocommerce' )
			],
			'type'    => [
				'title'       => __( 'Verification Behavior', 'sheerid-for-woocommerce' ),
				'type'        => 'select',
				'default'     => 'after_place_order',
				'options'     => [
					'page_load'         => __( 'On page load', 'sheerid-for-woocommerce' ),
					'after_place_order' => __( 'After place order clicked', 'sheerid-for-woocommerce' )
				],
				'description' => __( 'This option determines when the SheerID verification modal will appear.', 'sheerid-for-woocommerce' )
			]
		];
	}

	public function is_validation_enabled() {
		return \wc_string_to_bool( $this->get_option( 'enabled', 'no' ) ) && $this->has_program();
	}

	public function has_program() {
		return $this->get_option( 'program', '' );
	}

}